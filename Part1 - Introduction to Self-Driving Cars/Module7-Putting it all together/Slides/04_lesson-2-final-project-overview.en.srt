1
00:00:13,910 --> 00:00:18,720
You've now seen some of the capabilities of Carla and hopefully you've had

2
00:00:18,720 --> 00:00:23,070
a chance to download the simulator and start experimenting with it yourself.

3
00:00:23,070 --> 00:00:25,785
Now that we have a working simulation environment,

4
00:00:25,785 --> 00:00:28,220
you're ready to start implementing and testing

5
00:00:28,220 --> 00:00:31,700
the concepts that you've learned throughout this course.

6
00:00:31,700 --> 00:00:34,130
Let's take a look at the final projects you'll work

7
00:00:34,130 --> 00:00:37,050
on for course one of this specialization.

8
00:00:37,050 --> 00:00:40,640
In this project, you'll implement a simple controller in

9
00:00:40,640 --> 00:00:44,855
Python and use it to drive a car around a track in Carla.

10
00:00:44,855 --> 00:00:47,705
The track is a loop shown in this figure.

11
00:00:47,705 --> 00:00:53,120
You will be given a sorted list of waypoints which are equally spaced on this track.

12
00:00:53,120 --> 00:00:58,550
The waypoints include their positions as well as the speed the vehicles should attain.

13
00:00:58,550 --> 00:01:02,030
As a result, the waypoints become the reference signal for

14
00:01:02,030 --> 00:01:07,750
your controller and navigating to all the waypoints effectively completes the full track.

15
00:01:07,750 --> 00:01:12,230
Since the controller reference contains both position and speed,

16
00:01:12,230 --> 00:01:16,505
you will need to implement both longitudinal and lateral control.

17
00:01:16,505 --> 00:01:19,310
You may want to refer back to the modules on

18
00:01:19,310 --> 00:01:24,320
longitudinal control and lateral control before starting the project.

19
00:01:24,320 --> 00:01:27,980
The output of your controller will be the vehicle throttle,

20
00:01:27,980 --> 00:01:30,650
brake, and steering angle commands.

21
00:01:30,650 --> 00:01:32,840
The throttle and brake will come from

22
00:01:32,840 --> 00:01:37,430
your longitudinal speed control and the steering will come from your lateral control.

23
00:01:37,430 --> 00:01:42,095
Make sure to start with a simple controller design as possible and

24
00:01:42,095 --> 00:01:46,955
only add complexity if your vehicle does not track the path as expected.

25
00:01:46,955 --> 00:01:49,720
Of course, once you've got a working controller,

26
00:01:49,720 --> 00:01:54,785
don't hesitate to push its limits and see what it can really do on the race track.

27
00:01:54,785 --> 00:01:58,720
So, how are you going to want to structure your code for this project?

28
00:01:58,720 --> 00:02:03,500
We've prepared a starting script for you so that you don't need to worry about any of

29
00:02:03,500 --> 00:02:06,140
the Carla implementation details and you

30
00:02:06,140 --> 00:02:09,275
can just focus on programming the controller itself.

31
00:02:09,275 --> 00:02:15,335
If you open the simulator directory and navigate to the Course one final project folder,

32
00:02:15,335 --> 00:02:19,205
you'll see a file named controller2d.py.

33
00:02:19,205 --> 00:02:23,135
This is what you'll use as the starting point for the course project.

34
00:02:23,135 --> 00:02:24,950
When you open this file,

35
00:02:24,950 --> 00:02:29,060
you'll see the vehicle controller implemented as a Python class.

36
00:02:29,060 --> 00:02:33,785
This class contains all the information relevant to implementing the controller.

37
00:02:33,785 --> 00:02:37,915
The vehicle state, desired waypoint, desired speed,

38
00:02:37,915 --> 00:02:42,470
and controller outputs are stored in variables ready to be used.

39
00:02:42,470 --> 00:02:47,375
The class also contains functions which will interface with Carla directly.

40
00:02:47,375 --> 00:02:49,760
These functions will continually update

41
00:02:49,760 --> 00:02:53,570
the vehicle state and send the controller outputs to Carla,

42
00:02:53,570 --> 00:02:58,760
allowing you to focus your efforts purely on the controller implementation.

43
00:02:58,760 --> 00:03:02,030
Now, you might be wondering how your code is going to be

44
00:03:02,030 --> 00:03:05,930
evaluated and how you'll earn a grade for this project.

45
00:03:05,930 --> 00:03:08,060
After running your controller,

46
00:03:08,060 --> 00:03:12,845
a text file will be generated logging the entire trajectory of the vehicle.

47
00:03:12,845 --> 00:03:20,525
This file is called trajectory.txt and it is located in the controller output sub-folder.

48
00:03:20,525 --> 00:03:25,460
The performance of your controller will be graded based on this trajectory.

49
00:03:25,460 --> 00:03:30,200
There's a greater script that the Coursera platform we'll use to check your code.

50
00:03:30,200 --> 00:03:33,460
It will plot your waypoints, vehicle trajectory,

51
00:03:33,460 --> 00:03:36,785
and vehicle speeds compared to the desired speeds.

52
00:03:36,785 --> 00:03:41,935
Each waypoint has a distance and a speed threshold which are shown in green.

53
00:03:41,935 --> 00:03:45,320
A waypoint is considered successfully reached if

54
00:03:45,320 --> 00:03:48,710
the vehicle trajectory is within both thresholds.

55
00:03:48,710 --> 00:03:51,950
The grading script will tell you how many way points you have

56
00:03:51,950 --> 00:03:55,480
successfully reached and if you reach more than half,

57
00:03:55,480 --> 00:03:57,415
you'll pass the assessment.

58
00:03:57,415 --> 00:04:00,590
Once your trajectory passes the grading script,

59
00:04:00,590 --> 00:04:05,720
you can upload the trajectory text file onto Coursera for official completion.

60
00:04:05,720 --> 00:04:09,260
You now have everything you need in order to implement

61
00:04:09,260 --> 00:04:12,905
your very first controller and test it in simulation.

62
00:04:12,905 --> 00:04:15,320
This is a big step towards developing

63
00:04:15,320 --> 00:04:20,120
self-driving cars and a fundamental scenario that you'll see in the field.

64
00:04:20,120 --> 00:04:24,080
If you have any questions that I didn't answer in this video,

65
00:04:24,080 --> 00:04:26,450
there are further instructions in the readings for

66
00:04:26,450 --> 00:04:30,440
this module and you can always ask in the discussion forums as well.

67
00:04:30,440 --> 00:04:33,830
I hope you have fun with this final project and I'll see you

68
00:04:33,830 --> 00:04:38,770
again once that's completed to close out the course. Good luck.